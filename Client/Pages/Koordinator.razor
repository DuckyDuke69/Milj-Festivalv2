@page "/koordinator"
@using MiljøFestivalv2.Shared
@using System.Net.Http.Json
@using Client.Services
@using System.Globalization
@inject HttpClient Http
@inject NavigationManager NavManager
@inject GlobalState GlobalState

<head><link rel="stylesheet" href="cEditContext.css" /></head>

<h1>Koordinator</h1>

@if (VagtListe.Count == 0)
{
    <img src="Images/loading.gif" class="GIF">
}
else
{
    <!-- Printer alle Frivillige ud-->
    <h1 class="mb-3 mt-3">Alle Frivillige</h1>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>fulde navn</th>
                <th>email</th>
                <th>telefon nummer</th>
                <th>fødselsdag</th>
                <th>cpr nummer</th>
                <th>aktiv</th>
                <th>blacklistet</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var frivillige in FrivilligListe)
                {
                <tr>
                    <td>@frivillige.fulde_navn</td>
                    <td>@frivillige.email</td>
                    <td>@frivillige.telefon_nummer</td>
                    <td>@frivillige.fødselsdag</td>
                    <td>@frivillige.cpr_nummer</td>

                    <!--Skifter det den printer ud med ja og nej istedet for false og true-->
                    @if (frivillige.er_aktiv)
                        {
                        <td> Ja <button @onclick="() => SkiftAktivStatus(frivillige.bruger_id)">Toggle Aktiv</button> </td>
                        }
                        else
                        {
                        <td> Nej <button @onclick="() => SkiftAktivStatus(frivillige.bruger_id)">Toggle Aktiv</button> </td>
                        }

                    @if (frivillige.er_blacklistet)
                        {
                        <td> Ja <button @onclick="() => SkiftBlacklistStatus(frivillige.bruger_id)">Toggle Blacklist</button> </td>
                        }
                        else
                        {
                        <td> Nej <button @onclick="() => SkiftBlacklistStatus(frivillige.bruger_id)">Toggle Blacklist</button> </td>
                        }

                </tr>
                }
        </tbody>
    </table>

    <!-- Printer alle vagter ud-->
    <h1 class="mb-3 mt-3">Alle Vagter</h1>

    <table class="table table-striped">
        <thead>
            <tr>

                <th>Område</th>
                <th>Antal Personer</th>
                <th>Beskrivelse</th>
                <th>Start Tid</th>
                <th>Slut tid</th>
                <th>Prioritering</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vagt in VagtListe)
                {
                <tr>
                    <td>@vagt.område</td>
                    <td>@vagt.antal_personer</td>
                    <td>@vagt.beskrivelse</td>
                    <td>@vagt.start_tid</td>
                    <td>@vagt.slut_tid</td>
                    <td>@vagt.priotering</td>
                <td>
                <button class="btn btn-danger" @onclick="() => DeleteVagt(vagt.vagt_id)">Fjern Vagt</button>
                </td
                <td>
                <button class="btn btn-danger" @onclick="() => RedigerVagt(vagt.vagt_id)">Rediger vagt</button>
                </td>
                </tr>
                }
        </tbody>
    </table>

    <!-- Printer alle bookinger-->
    <h1 class="mb-3 mt-3">Bookinger</h1>

    <table class="table table-striped">
        <thead>
            <tr>

                <th>Område</th>
                <th>Beskrivelse</th>
                <th>Frivillige</th>
                <th>Telefon nummer</th>
                <th>Start Tid</th>
                <th>Slut tid</th>
                <th>Prioritering</th>
                <th>Vagt id</th>
                <th>Låst</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var booking in BookingListe)
                {
                <tr>
                    <td>@booking.område</td>
                    <td>@booking.beskrivelse</td>
                    <td>@booking.fulde_navn</td>
                    <td>@booking.telefon_nummer</td>
                    <td>@booking.start_tid</td>
                    <td>@booking.slut_tid</td>
                    <td>@booking.priotering</td>
                    <td>@booking.vagt_id</td>
                    @if (booking.er_låst)
                    {
                        <td> Ja <button @onclick="() => SkiftLåsStatus(booking.booking_id)">Åbn vagt</button> </td>
                    }
                    else
                    {
                        <td> Nej <button @onclick="() => SkiftLåsStatus(booking.booking_id)">Lås vagt</button> </td>
                    }
                </tr>
                }
        </tbody>
    </table>

    <EditForm EditContext="@cEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="container"> 
            <div>
                <label>Område:</label>
                <InputText id="område" @bind-Value="vagt.område" required />
            </div>
            <div>
                <label>Start tid:</label>
                <InputDate id="start_tid" @bind-Value="vagt.start_tid" required />
            </div>
            <div>
                <label>Slut tid:</label>
                <InputDate id="slut_tid" @bind-Value="vagt.slut_tid" required />
            </div>
            <div>
                <label>Vagt beskrivelse:</label>
                <InputText id="beskrivelse" @bind-Value="vagt.beskrivelse" required />
            </div>
            <div>
            <label>Vagt prioritering:</label>
            <InputSelect id="priotering" @bind-Value="vagt.priotering" class="form-control">
               <option value="høj">høj</option>
               <option value="lav">lav</option>
            </InputSelect>
           </div>
            <div>
                <label>Antal personer:</label>
                <InputNumber id="antal_personer" @bind-Value="vagt.antal_personer" required />
            </div>
            <button type="submit">Opret vagt</button>
        </div>
    </EditForm>


}

@code {

    private EditContext cEditContext;
    Vagt vagt = new Vagt();


    // Laver en liste med datamodel klasserne fra shared
    public List<Bruger> FrivilligListe = new List<Bruger>();
    public List<Vagt> VagtListe = new List<Vagt>();
    public List<Booking> BookingListe = new List<Booking>();


    // Injecter metoderne fra services
    [Inject]
    public IVagtService ServiceVagt { get; set; }
    [Inject]
    public IBrugerService ServiceBruger { get; set; }
    [Inject]
    public IBookingService ServiceBooking { get; set; }

    // På initialized henter vagter og brugere
    protected override async Task OnInitializedAsync()
    {

        cEditContext = new EditContext(vagt);
        var vagt_id = GlobalState.vagt_id;

        FrivilligListe = (await ServiceBruger.HentAlleFrivillige()).ToList();
        VagtListe = (await ServiceVagt.HentAlleVagter()).ToList();
        BookingListe = (await ServiceBooking.HentAlleBookinger()).ToList();
    }

    // Metoden der bruges på vores fjern vagt knap, sletter vagten på listen ud fra id
    private async Task DeleteVagt(int vagt_id)
    {
        await ServiceVagt.DeleteVagt(vagt_id);
        VagtListe = (await ServiceVagt.HentAlleVagter()).ToList();
        StateHasChanged();
    }

    private async Task SkiftAktivStatus(int bruger_id)
    {
        await ServiceBruger.SkiftAktivStatus(bruger_id);
        FrivilligListe = (await ServiceBruger.HentAlleFrivillige()).ToList();
        StateHasChanged();
    }

    private async Task SkiftBlacklistStatus(int bruger_id)
    {
        await ServiceBruger.SkiftBlacklistStatus(bruger_id);
        FrivilligListe = (await ServiceBruger.HentAlleFrivillige()).ToList();
        StateHasChanged();
    }

    private async Task SkiftLåsStatus(int BookingId)
    {
        await ServiceBooking.SkiftLåsStatus(BookingId);
        BookingListe = (await ServiceBooking.HentAlleBookinger()).ToList();
        StateHasChanged();
    }

    private async Task HandleValidSubmit()
    {
        await ServiceVagt.TilføjVagt(vagt);
        StateHasChanged();

    }

    private void RedigerVagt(int vagt_id)
    {
        NavManager.NavigateTo($"/opdatervagt/{vagt_id}");
    }


    }


