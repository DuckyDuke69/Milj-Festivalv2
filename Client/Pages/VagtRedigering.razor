
@page "/opdatervagt/{vagt_id:int}"
@using MiljøFestivalv2.Shared
@using System.Net.Http.Json
@using Client.Services
@using Microsoft.AspNetCore.Components.Forms
@using System.Globalization
@inject NavigationManager Navigation
@inject HttpClient Http


<h1>Opdater Vagt</h1>

@if (vagt != null)
{
		<EditForm Model="vagt" OnValidSubmit="OpdaterVagt">
			<DataAnnotationsValidator />
			<ValidationSummary />

			<div class="form-group">
				<label for="område">Område:</label>
			<InputText id="område" style="width: 300px" @bind-Value="vagt.område" class="form-control" />
			</div>
			<div class="form-group">
				<label for="start_tid">Start tid:</label>
			<InputDate id="start_tid" style="width: 300px" @bind-Value="vagt.start_tid" class="form-control" />
			</div>

			<div class="form-group">
				<label for="slut_tid">Slut tid:</label>
			<InputDate id="slut_tid" style="width: 300px" @bind-Value="vagt.slut_tid" class="form-control" />
			</div>

			<div class="form-group">
				<label for="beskrivelse">Beskrivelse:</label>
			<InputText id="beskrivelse" style="width: 300px" @bind-Value="vagt.beskrivelse" class="form-control" />
			</div>

            <div>
            <label>Vagt prioritering:</label>
			<InputSelect id="priotering" style="width: 300px" @bind-Value="vagt.priotering" class="form-control">
			   <option value="lav" style="color:black">Vælg priotet</option>
               <option value="høj">høj</option>
               <option value="lav">lav</option>
            </InputSelect>
           </div>
		    <div>
                <label>Antal point</label>
			<InputNumber id="point" @bind-Value="vagt.point" style="width: 300px" required />
            </div>
			<div class="form-group">
				<label for="antal_personer">Antal personer:</label>
			<InputNumber id="antal_personer" @bind-Value="vagt.antal_personer" style="width: 300px" class="form-control" />
			</div>
			<div>
			<button type="submit">Opdater</button>
			<button @onclick="RedirectKoordinator">Gå tilbage</button>
			</div>
		</EditForm>
}
else
{
		<p>Loading...</p>
}



@code {
// Parameter som indeholder id'et for den vagt, der skal opdateres.
[Parameter] 
public int vagt_id { get; set; } 

// Injecter VagtService interfacet så metoderne derfra kan bruges.
[Inject]
public IVagtService VagtService { get; set; } 

// En lokal instans af en 'Vagt', der repræsenterer den vagt der skal opdateres.
private Vagt vagt;

// Denne metode bliver kaldt når komponenten initialiseres. Den henter den relevante vagt baseret på id'et.
protected override async Task OnInitializedAsync()
{
    vagt = await VagtService.HentVagtSingle(vagt_id);
}

// Denne metode opdaterer vagten ved at kalde OpdaterVagt metoden fra VagtService og derefter navigerer tilbage til den samme side for at vise opdateringerne.
private async Task OpdaterVagt()
{
    await VagtService.OpdaterVagt(vagt);
    Navigation.NavigateTo($"/opdatervagt/{vagt.vagt_id}", forceLoad: true);
}

// Denne metode navigerer til koordinator-siden efter en vagt er blevet redigeret.
private void RedirectKoordinator()
{
    Navigation.NavigateTo("/koordinator");
}

}
